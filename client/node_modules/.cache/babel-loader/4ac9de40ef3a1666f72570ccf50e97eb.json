{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jocul\\\\OneDrive\\\\Desktop\\\\licenta\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Logheaza-te pentru a putea alatura platformei !\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Titlu\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Mesaj\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (separate prin virgula)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Sterge\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/jocul/OneDrive/Desktop/licenta/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","clear","handleSubmit","e","preventDefault","name","result","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const [postData, setPostData] = useState({  title: '', message: '', tags: '', selectedFile: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user=JSON.parse(localStorage.getItem(\"profile\"));\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({  title: '', message: '', tags: '', selectedFile: '' });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost({...postData, name :user?.result?.name}));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId,{...postData,name:user?.result?.name}));\r\n      clear();\r\n    }\r\n  };\r\n  if (!user?.result?.name){\r\n    return(\r\n      <Paper className={classes.paper}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Logheaza-te pentru a putea alatura platformei !\r\n        </Typography>\r\n\r\n      </Paper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Titlu\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Mesaj\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (separate prin virgula)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Sterge</Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}